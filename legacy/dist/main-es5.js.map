{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/input/upload-image/upload-image.component.ts","webpack:///src/app/shared/input/upload-image/upload-image.component.html","webpack:///src/app/shared/material.module.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","m","ResumeGeneratorModule","AppRoutingModule","forRoot","useHash","imports","AppComponent","translateService","setDefaultLang","use","selector","templateUrl","styleUrls","HttpLoaderFactory","http","AppModule","loader","provide","useFactory","deps","defaultLanguage","declarations","providers","bootstrap","UploadImageComponent","overlay","viewContainerRef","srcChange","inputId","Date","getTime","initOverlay","initAspectRatioList","event","file","files","srcFile","value","options","limitSize","size","alert","instant","transformSize","reader","FileReader","onload","previewSrc","target","result","toString","openDialog","setTimeout","aspectRatio","isIconPreview","cropper","previewImage","nativeElement","zoomable","scalable","background","center","checkCrossOrigin","checkOrientation","highlight","responsive","readAsDataURL","src","emit","ratio","split","wRatio","hRatio","setAspectRatio","Number","detachDialog","canvas","getCroppedCanvas","toDataURL","type","zoom","strategy","position","global","centerHorizontally","centerVertically","overlayRef","create","positionStrategy","hasBackdrop","attach","previewImageContainer","hasAttached","detach","isOpen","attachDialog","K","M","G","limitSizeDecimalPosition","toFixed","aspectRatioList","onFileChange","MaterialModule","SharedModule","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'resume', pathMatch: 'full' },\n  {\n    path: 'resume',\n    loadChildren: () => import('./resume-generator/resume-generator.module').then(m => m.ResumeGeneratorModule)\n  },\n  { path: '**', redirectTo: 'resume' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'yur-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(private translateService: TranslateService) {}\n\n  ngOnInit() {\n    this.translateService.setDefaultLang('zh-TW');\n    this.translateService.use('zh-TW');\n  }\n}\n","<div class=\"router-container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      },\n      defaultLanguage: 'zh-TW'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\n\nimport Cropper from 'cropperjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { UploadImageOptions } from './upload-image.component.model';\n@Component({\n  selector: 'yur-upload-image',\n  templateUrl: './upload-image.component.html',\n  styleUrls: ['./upload-image.component.scss']\n})\nexport class UploadImageComponent implements OnInit {\n  @ViewChild('previewImage') previewImage: ElementRef<HTMLImageElement>;\n  @ViewChild('previewImageContainer', { static: true }) previewImageContainer: TemplateRef<HTMLElement>;\n  @Input() src: string; // display preview image\n  @Input() options: UploadImageOptions; // upload image options\n  @Output() srcChange = new EventEmitter<string>(); // emit after src change\n\n  inputId = new Date().getTime();\n  srcFile: File;\n  overlayRef: OverlayRef;\n  previewSrc: string;\n  aspectRatioList: string[];\n  private cropper: Cropper;\n  constructor(private overlay: Overlay, private viewContainerRef: ViewContainerRef, private translateService: TranslateService) {}\n\n  ngOnInit() {\n    this.initOverlay();\n    this.initAspectRatioList();\n  }\n\n  onFileChange(event: HTMLInputElement) {\n    const file: File = event.files[0];\n    this.srcFile = file;\n    // avoid doesn't fire event when choose the same file\n    event.value = '';\n    if (!file) {\n      return;\n    }\n\n    if (this.options && this.options.limitSize && file.size > this.options.limitSize) {\n      alert(this.translateService.instant('Editing.Message.UploadSizeIsLargeThan', { value: this.transformSize(this.options.limitSize) }));\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = (e: ProgressEvent<FileReader>) => {\n      this.previewSrc = e.target.result.toString();\n      this.openDialog(true);\n      // next tick\n      setTimeout(() => {\n        const aspectRatio = this.options ? (this.options.isIconPreview ? 1 : this.options.aspectRatio || 4 / 3) : 4 / 3;\n        this.cropper = new Cropper(this.previewImage.nativeElement, {\n          zoomable: true,\n          scalable: true,\n          background: true,\n          center: true,\n          checkCrossOrigin: true,\n          checkOrientation: true,\n          highlight: true,\n          aspectRatio,\n          responsive: true\n        });\n      });\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onClearImage() {\n    this.src = null;\n    this.srcChange.emit(this.src);\n  }\n\n  onSetAspectRatio(ratio: string) {\n    const [wRatio, hRatio] = ratio.split(':');\n    this.cropper.setAspectRatio(Number(wRatio) / Number(hRatio));\n  }\n\n  onFinishPreview() {\n    this.detachDialog();\n    const canvas = this.cropper.getCroppedCanvas();\n    this.src = canvas.toDataURL(this.srcFile.type);\n\n    this.srcChange.emit(this.src);\n  }\n\n  onCancelPreview() {\n    this.detachDialog();\n  }\n\n  onZoomIn() {\n    this.cropper.zoom(0.1);\n  }\n\n  onZoomOut() {\n    this.cropper.zoom(-0.1);\n  }\n\n  private initOverlay() {\n    const strategy = this.overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n    this.overlayRef = this.overlay.create({\n      positionStrategy: strategy,\n      hasBackdrop: true\n    });\n  }\n\n  private attachDialog() {\n    this.overlayRef.attach(new TemplatePortal(this.previewImageContainer, this.viewContainerRef));\n  }\n\n  private detachDialog() {\n    if (!this.hasAttached()) {\n      return;\n    }\n    this.overlayRef.detach();\n  }\n\n  private hasAttached() {\n    return this.overlayRef && this.overlayRef.hasAttached();\n  }\n\n  private openDialog(isOpen: boolean) {\n    if (isOpen) {\n      this.attachDialog();\n    } else {\n      this.detachDialog();\n    }\n  }\n\n  private transformSize(size: number): string {\n    const K = 1_024;\n    const M = 1_024 * 1_024;\n    const G = 1_024 * 1_024 * 1_024;\n    const limitSizeDecimalPosition = this.options ? this.options.limitSizeDecimalPosition || 0 : 0;\n    if (size < K) {\n      return size.toFixed(limitSizeDecimalPosition) + 'B';\n    } else if (size / K < 1_000) {\n      return (size / K).toFixed(limitSizeDecimalPosition) + 'KB';\n    } else if (size / M < 1_000) {\n      return (size / M).toFixed(limitSizeDecimalPosition) + 'MB';\n    } else {\n      return (size / G).toFixed(limitSizeDecimalPosition) + 'GB';\n    }\n  }\n\n  private initAspectRatioList() {\n    this.aspectRatioList = ['5:3', '5:2', '3:1'];\n  }\n}\n","<div class=\"upload-images-container\" [class.disabled]=\"options?.disabled\" [class.isIconPreview]=\"options?.isIconPreview\">\n  <label [for]=\"inputId\">\n    <img *ngIf=\"src\" class=\"images\" [src]=\"src\" alt=\"upload images\" />\n    <div *ngIf=\"!src\" class=\"images default-images\">\n      <img class=\"images\" *ngIf=\"options?.defaultSrc\" [src]=\"options?.defaultSrc\" alt=\"default images\" />\n      <div *ngIf=\"!options?.defaultSrc && options?.defaultText\">{{ options?.defaultText }}</div>\n    </div>\n  </label>\n  <input\n    class=\"caret-white\"\n    [id]=\"inputId\"\n    class=\"upload-images\"\n    accept=\"image/*\"\n    type=\"file\"\n    (change)=\"onFileChange($event.target)\"\n    [disabled]=\"options?.disabled ? 'disabled' : null\"\n  />\n  <div class=\"image-tools\" *ngIf=\"src\">\n    <mat-icon\n      fontSet=\"fas\"\n      class=\"clear-icon\"\n      fontIcon=\"fa-trash\"\n      (click)=\"onClearImage()\"\n      *ngIf=\"options?.isShowClearIconInHoverImage\"\n    ></mat-icon>\n  </div>\n</div>\n\n<ng-template #previewImageContainer>\n  <div class=\"yur-preview-images-panel\" [class.isIconPreview]=\"options?.isIconPreview\">\n    <div class=\"preview-images-tools\">\n      <mat-button-toggle-group\n        class=\"aspect-ratio-toggle-group\"\n        *ngIf=\"options?.isUseAspectRatioTool\"\n        [value]=\"aspectRatioList[0]\"\n        [appearance]=\"false\"\n      >\n        <mat-button-toggle *ngFor=\"let aspectRatio of aspectRatioList\" (click)=\"onSetAspectRatio(aspectRatio)\" [value]=\"aspectRatio\">\n          <div class=\"aspect-ratio-content\">{{ aspectRatio }}</div>\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n      <mat-icon fontSet=\"fas\" fontIcon=\"fa-search-plus\" (click)=\"onZoomIn()\"></mat-icon>\n      <mat-icon fontSet=\"fas\" fontIcon=\"fa-search-minus\" (click)=\"onZoomOut()\"></mat-icon>\n    </div>\n    <div class=\"preview-images-block\">\n      <img #previewImage crossorigin class=\"preview-images\" [src]=\"previewSrc\" alt=\"preview icon\" />\n    </div>\n    <div class=\"preview-btn-panel\">\n      <button mat-raised-button color=\"accent\" (click)=\"onCancelPreview()\">Cancel</button>\n      <button mat-raised-button color=\"primary\" (click)=\"onFinishPreview()\">Done</button>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\n// import { A11yModule } from '@angular/cdk/a11y';\n// import { ClipboardModule } from '@angular/cdk/clipboard';\n// import { DragDropModule } from '@angular/cdk/drag-drop';\n// import { PortalModule } from '@angular/cdk/portal';\n// import { ScrollingModule } from '@angular/cdk/scrolling';\n// import { CdkStepperModule } from '@angular/cdk/stepper';\n// import { CdkTableModule } from '@angular/cdk/table';\n// import { CdkTreeModule } from '@angular/cdk/tree';\n// import { MatAutocompleteModule } from '@angular/material/autocomplete';\n// import { MatBadgeModule } from '@angular/material/badge';\n// import { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\n// import { MatCheckboxModule } from '@angular/material/checkbox';\n// import { MatChipsModule } from '@angular/material/chips';\n// import { MatStepperModule } from '@angular/material/stepper';\n// import { MatDatepickerModule } from '@angular/material/datepicker';\n// import { MatDialogModule } from '@angular/material/dialog';\n// import { MatDividerModule } from '@angular/material/divider';\n// import { MatExpansionModule } from '@angular/material/expansion';\n// import { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n// import { MatListModule } from '@angular/material/list';\n// import { MatMenuModule } from '@angular/material/menu';\n// import { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\n// import { MatPaginatorModule } from '@angular/material/paginator';\n// import { MatProgressBarModule } from '@angular/material/progress-bar';\n// import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n// import { MatSidenavModule } from '@angular/material/sidenav';\n// import { MatSliderModule } from '@angular/material/slider';\n// import { MatSlideToggleModule } from '@angular/material/slide-toggle';\n// import { MatSnackBarModule } from '@angular/material/snack-bar';\n// import { MatSortModule } from '@angular/material/sort';\n// import { MatTableModule } from '@angular/material/table';\n// import { MatTabsModule } from '@angular/material/tabs';\n// import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n// import { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    OverlayModule,\n    // A11yModule,\n    // ClipboardModule,\n    // CdkStepperModule,\n    // CdkTableModule,\n    // CdkTreeModule,\n    // DragDropModule,\n    // MatAutocompleteModule,\n    // MatBadgeModule,\n    // MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    // MatCheckboxModule,\n    // MatChipsModule,\n    // MatStepperModule,\n    // MatDatepickerModule,\n    // MatDialogModule,\n    // MatDividerModule,\n    // MatExpansionModule,\n    // MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    // MatListModule,\n    // MatMenuModule,\n    // MatNativeDateModule,\n    // MatPaginatorModule,\n    // MatProgressBarModule,\n    // MatProgressSpinnerModule,\n    MatRadioModule,\n    // MatRippleModule,\n    MatSelectModule,\n    // MatSidenavModule,\n    // MatSliderModule,\n    // MatSlideToggleModule,\n    // MatSnackBarModule,\n    // MatSortModule,\n    // MatTableModule,\n    // MatTabsModule,\n    // MatToolbarModule,\n    MatTooltipModule\n    // MatTreeModule,\n    // PortalModule,\n    // ScrollingModule\n  ]\n})\nexport class MaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from './material.module';\nimport { UploadImageComponent } from './input/upload-image/upload-image.component';\n@NgModule({\n  declarations: [UploadImageComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule],\n  exports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule, UploadImageComponent]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}